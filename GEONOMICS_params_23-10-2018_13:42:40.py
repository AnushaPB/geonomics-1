#GEONOMICS_params_23-10-2018_13:42:40.py

#This is a default parameters file generated by Geonomics
#(by the gnx.params.make_parameters_file() function).


                      ## :: ::    :::            ##
                ##:::   :::::    :::   ::    :: :: :::##
             ## ::::     ::           ::   ::::::::::::::##
           ##::::::                       ::::::::: :::::: :##
         ## :    :::                    :::    ::    :::::::::##
        ##ggggg eeee ooo   n   n   ooo   m   m iiiii  cccc ssss##
       ##g     e    o   o  nn  n  o   o  m   m   i   c     s    ##
       ##g     eee o     o n n n o     o mm mm   i   c     sssss##
       ##g ggg eee o     o n  nn o     o m m m   i   c         s##
       ##g   g e    o   o  n   n  o   o  m   m   i   c        ss##
        ##gggg  eeee ooo   n   n   ooo   m   m iiiii  cccc ssss##
         ##  ::::::::        ::::::::::::  :       ::  ::   : ##
           ##  ::::              :::::::  ::     ::::::::  :##
             ## :::               :::::: ::       ::::::  ##
                ##:                ::::                ##
                      ##                         ##


#NOTE: GET RID OF THIS SOON!
import numpy as np

params = {
###############################################################################

###################
#### LANDSCAPE ####
###################
    'landscape': {

    ##############
    #### main ####
    ##############
        'main': {
            #dimensions of the Landscape
            'dim':                      (20,20),
            #resolution of the Landscape
            'res':                      (1,1),
            #upper-left corner of the Landscape
            'ulc':                      (0,0),
            #projection of the Landscape
            'prj':                      None,
            }, # <END> 'main'

    ################
    #### layers ####
    ################
        'layers': {

            #layer name (LAYER NAMES MUST BE UNIQUE!)
            'layer_0': {

        #######################################
        #### layer num. 0: init parameters ####
        #######################################

                #initiating parameters for this layer
                'init': {

                    #parameters for a 'random'-type Layer
                    'random': {
                        #number of random points
                        'n_pts':                        500,
                        #interpolation method {'linear', 'cubic', 'nearest'}
                        'interp_method':                'cubic',

                        }, # <END> 'random'

                    }, # <END> 'init'

            #########################################
            #### layer num. 0: change parameters ####
            #########################################

                #landscape-change event for this Layer
                'change': {
                    #end raster for event (DIM MUST EQUAL DIM OF LANDSCAPE!)
                    'end_rast':         np.zeros((20,20)),
                    #starting timestep of event
                    'start_t':          1500,
                    #ending timestep of event
                    'end_t':            2000,
                    #number of stepwise changes in event
                    'n_steps':          10

                }, # <END> 'change'

                }, # <END> layer num. 0



    #### NOTE: Individual Layers' sections can be copy-and-pasted (and
    #### assigned distinct keys and names), to create additional Layers.


            } # <END> 'layers'

        }, # <END> 'landscape'


###############################################################################

###################
#### COMMUNITY ####
###################
    'comm': {

        'pops': {

            #pop name (POP NAMES MUST BE UNIQUE!)
            'pop_0': {

            #####################################
            #### pop num. 0: init parameters ####
            #####################################

                'init': {
                    #starting population size
                    'N':                200,
                    #carrying-capacity Layer name
                    'K_layer':          'layer_0',
                    }, # <END> 'init'

            #######################################
            #### pop num. 0: mating parameters ####
            #######################################

                'mating'    : {
                    #age(s) at sexual maturity (if tuple, female first)
                    'repro_age':                0,
                    #whether to assign sexes
                    'sex':                      False,
                    #ratio of males to females
                    'sex_ratio':                1/1,
                    #whether P(birth) should be weighted by parental dist
                    'distweighted_birth':       False,
                    #pop intrinsic growth rate
                    'R':                        0.5,
                    #pop intrinsic birth rate (MUST BE 0<=b<=1)
                    'b':                        0.2,
                    #expectation of distr of n offspring per mating pair
                    'n_births_distr_lambda':    1,
                    #radius of mate-search area
                    'mating_radius':            10,
                    }, # <END> 'mating'

            ##########################################
            #### pop num. 0: mortality parameters ####
            ##########################################

                'mortality'     : {
                    #maximum age
                    'max_age':                  1,
                    #min P(death) (MUST BE 0<=d_min<=1)
                    'd_min':                     0.01,
                    #max P(death) (MUST BE 0<=d_max<=1)
                    'd_max':                    0.99,
                    #width of window used to estimate local pop density
                    'density_grid_window_width':   None,
                    }, # <END> 'mortality'

            #########################################
            #### pop num. 0: movement parameters ####
            #########################################

                'movement': {
                    #mode of distr of movement direction
                    'direction_distr_mu':     1,
                    #concentration of distr of movement direction
                    'direction_distr_kappa':  0,
                    #mean of distr of movement distance
                    'distance_distr_mu':      0.5,
                    #variance of distr of movement distance
                    'distance_distr_sigma':   0.5,
                    #mean of distr of dispersal distance
                    'dispersal_distr_mu':     0.5,
                    #variance of distr of dispersal distance
                    'dispersal_distr_sigma':  0.5,

                    },    # <END> 'movement'


            #####################################################
            #### pop num. 0: genomic architecture parameters ####
            #####################################################

                'gen_arch': {
                    #/path/to/file.csv defining custom genomic arch
                    'gen_arch_file':            None,
                    #num of loci
                    'L':                        100,
                    #num of chromosomes
                    'l_c':                      [75, 25],
                    #genome-wide per-base neutral mut rate (0 to disable)
                    'mu_neut':                  1e-9,
                    #genome-wide per-base deleterious mut rate (0 to disable)
                    'mu_delet':                 0,
                    #shape of distr of deleterious effect sizes
                    'delet_alpha_distr_shape':      0.2,
                    #scale of distr of deleterious effect sizes
                    'delet_alpha_distr_scale':      0.2,
                    #alpha of distr of recomb rates
                    'r_distr_alpha':            0.5,
                    #beta of distr of recomb rates
                    'r_distr_beta':             15e9,
                    #whether loci should be dominant (for allele '1')
                    'dom':                      False,
                    #whether to allow pleiotropy
                    'pleiotropy':               False,
                    #custom fn for drawing recomb rates
                    'recomb_rate_custom_fn':    None,
                    #number of recomb paths to hold in memory
                    'n_recomb_paths_mem': int(1e4),
                    #total number of recomb paths to simulate
                    'n_recomb_paths_tot':           int(1e5),
                    #whether to save mutation logs
                    'mut_log':                  False,

                    }, # <END> 'gen_arch'


                }, # <END> pop num. 0



    #### NOTE: Individual Populations' sections can be copy-and-pasted (and
    #### assigned distinct keys and names), to create additional Populations.


            }, # <END> 'pops'

        }, # <END> 'comm'


###############################################################################

###############
#### MODEL ####
###############
    'model': {
        #total Model runtime (in timesteps)
        'T':            100,
        #min burn-in runtime (in timesteps)
        'burn_T':       30,
        #seed number
        'num':          None,

        ###############################
        #### iterations parameters ####
        ###############################
        'its': {
            #num iterations
            'n_its': 3,
            #whether to randomize Landscape each iteration
            'rand_landscape':    False,
            #whether to randomize Community each iteration
            'rand_comm':    False,
            #whether to burn in each iteration
            'repeat_burn':  False,
            }, # <END> 'iterations'



        } # <END> 'model'

    } # <END> params
